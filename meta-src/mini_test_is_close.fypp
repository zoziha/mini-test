#:include "common.fypp"
submodule(mini_test) mini_test_is_close

contains

    #! Determines whether the values of `a` and `b` are close.
    #:for k1, t1 in REAL_KINDS_TYPES
    elemental module function is_close_${t1[0]}$${k1}$(a, b, rtol, atol) result(bool)
        ${t1}$, intent(in) :: a, b
        real(${k1}$), intent(in), optional  :: rtol, atol
        logical :: bool

        bool = abs(a - b) <= abs(optval(rtol, 1.0e-5_${k1}$)*b) + &
                             abs(optval(atol, 1.0e-8_${k1}$))

    end function is_close_${t1[0]}$${k1}$
    #:endfor

    #:for k1, t1 in CMPLX_KINDS_TYPES
    elemental module function is_close_${t1[0]}$${k1}$(a, b, rtol, atol) result(bool)
        ${t1}$, intent(in) :: a, b
        real(${k1}$), intent(in), optional  :: rtol, atol
        logical :: bool

        #! bool = is_close_r${k1}$(a%re, b%re, rtol, atol) .and. &
        #!        is_close_r${k1}$(a%im, b%im, rtol, atol)
        bool = is_close_r${k1}$(real(a),  real(b),  rtol, atol) .and. &
               is_close_r${k1}$(aimag(a), aimag(b), rtol, atol)

    end function is_close_${t1[0]}$${k1}$
    #:endfor

end submodule mini_test_is_close